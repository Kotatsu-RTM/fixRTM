--- a/jp/ngt/rtm/gui/GuiVehicleControlPanel.java
+++ b/jp/ngt/rtm/gui/GuiVehicleControlPanel.java
@@ -42,11 +42,10 @@
    private static int tabPage = 0;
    private int maxPages = 0;
    protected final EntityVehicleBase vehicle;
    protected final EntityPlayer player;
    protected final ModelSetVehicleBase<VehicleBaseConfig> modelset;
-   private GuiButton buttonChunkLoader;
    private GuiButton buttonDestination;
    private GuiButton buttonAnnouncement;
    private GuiButton[] buttonDirection = new GuiButton[3];
    private GuiButtonDoor[] buttonDoor = new GuiButtonDoor[2];
    private int[] dataValues;
@@ -115,14 +114,10 @@
                if (j2 == j1) {
                   this.buttonDirection[j2].enabled = false;
                }
             }
 
-            this.buttonChunkLoader = new GuiButton(127, this.guiLeft + 28, this.guiTop + 52, 120, 20, this.getFormattedText(TrainState.TrainStateType.ChunkLoader, this.vehicle.getVehicleState(TrainState.TrainStateType.ChunkLoader)));
-            this.buttonList.add(this.buttonChunkLoader);
-            this.buttonList.add(new GuiButton(110, this.guiLeft + 4, this.guiTop + 52, 20, 20, "<"));
-            this.buttonList.add(new GuiButton(111, this.guiLeft + 152, this.guiTop + 52, 20, 20, ">"));
             if (this.modelset.getConfig().rollsignNames != null) {
                this.buttonDestination = new GuiButton(128, this.guiLeft + 28, this.guiTop + 76, 120, 20, this.getFormattedText(TrainState.TrainStateType.Destination, this.vehicle.getVehicleState(TrainState.TrainStateType.Destination)));
                this.buttonList.add(this.buttonDestination);
                this.buttonList.add(new GuiButton(112, this.guiLeft + 4, this.guiTop + 76, 20, 20, "<"));
                this.buttonList.add(new GuiButton(113, this.guiLeft + 152, this.guiTop + 76, 20, 20, ">"));
@@ -148,11 +143,12 @@
 
             for(int j = 0; j < astring.length; ++j) {
                int k = this.vehicle.getResourceState().getDataMap().getInt("Button" + j);
                int l = this.guiLeft + 4 + j % 3 * 57;
                int i1 = this.guiTop + 4 + j / 3 * 24;
-               GuiButtonCustom guibuttoncustom = new GuiButtonCustom(2000 + j, l, i1, 54, 20, astring[j][k], this);
+               String buttonText = k < astring[j].length ? astring[j][k] : "Out of range";
+               GuiButtonCustom guibuttoncustom = new GuiButtonCustom(2000 + j, l, i1, 54, 20, buttonText, this);
                guibuttoncustom.addTips(astring1[j]);
                this.buttonList.add(guibuttoncustom);
                this.dataValues[j] = k;
             }
          } else if (tab == TabTrainControlPanel.TAB_Formation) {
@@ -205,10 +201,34 @@
          GL11.glDisable(3042);
       }
 
    }
 
+   @Override
+   protected void keyTyped(char typedChar, int keyCode) throws IOException {
+      super.keyTyped(typedChar, keyCode);
+      if (keyCode == org.lwjgl.input.Keyboard.KEY_F) {
+         int x = Mouse.getEventX() * this.width / this.mc.displayWidth;
+         int y = this.height - Mouse.getEventY() * this.height / this.mc.displayHeight - 1;
+         this.buttonList.stream()
+            .filter(button -> button.id >= CUSTOM_BUTTOM_ID)
+            .filter(button -> button.mousePressed(this.mc, x, y))
+            .findFirst()
+            .ifPresent(button -> {
+               int index = button.id - CUSTOM_BUTTOM_ID;
+               int val = this.dataValues[index];
+
+               java.util.Arrays.stream(this.vehicle.getFormation().entries)
+                  .filter(java.util.Objects::nonNull)
+                  .map(entry -> entry.train)
+                  .filter(java.util.Objects::nonNull)
+                  .forEach(train -> train.getResourceState().getDataMap().setInt("Button" + index, val, 3));
+               button.playPressSound(this.mc.getSoundHandler());
+            });
+      }
+   }
+
    protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException {
       if (mouseButton == 0) {
          int i = mouseX - this.guiLeft;
          int j = mouseY - this.guiTop;
          TabTrainControlPanel[] atabtraincontrolpanel = TabTrainControlPanel.tabArray;
@@ -463,17 +483,11 @@
       }
 
       if (button.id >= 110 && button.id <= 115 || button.id >= 124 && button.id <= 129 || button.id >= 140 && button.id <= 142) {
          TrainState.TrainStateType trainstate$trainstatetype = null;
          int i = 0;
-         if (button.id == 110) {
-            trainstate$trainstatetype = TrainState.TrainStateType.ChunkLoader;
-            i = this.vehicle.getVehicleState(trainstate$trainstatetype) - 1;
-         } else if (button.id == 111) {
-            trainstate$trainstatetype = TrainState.TrainStateType.ChunkLoader;
-            i = this.vehicle.getVehicleState(trainstate$trainstatetype) + 1;
-         } else if (button.id == 112) {
+         if (button.id == 112) {
             trainstate$trainstatetype = TrainState.TrainStateType.Destination;
             i = this.vehicle.getVehicleState(trainstate$trainstatetype) - 1;
             if (i < 0) {
                i = this.modelset.getConfig().rollsignNames.length - 1;
             }
@@ -504,11 +518,12 @@
 
             if (button.id == 129) {
                int i2 = this.vehicle.getVehicleState(TrainState.TrainStateType.Announcement);
                String[][] astring3 = this.modelset.getConfig().sound_Announcement;
                if (astring3 != null && i2 < astring3.length) {
-                  RTMCore.proxy.playSound(this.vehicle, astring3[i2][1], 1.0F, 1.0F);
+                  RTMCore.NETWORK_WRAPPER.sendToServer(
+                     new jp.ngt.rtm.network.PacketRTMKey(player, RTMCore.KEY_Chime, astring3[i2][1]));
                }
 
                return;
             }
 
@@ -533,22 +548,18 @@
             }
          }
 
          int j1 = i < trainstate$trainstatetype.min ? trainstate$trainstatetype.max : (i > trainstate$trainstatetype.max ? trainstate$trainstatetype.min : i);
          this.vehicle.syncVehicleState(trainstate$trainstatetype, (byte)j1);
-         if (button.id != 110 && button.id != 111) {
-            if (button.id != 112 && button.id != 113) {
-               if (button.id != 114 && button.id != 115) {
-                  button.displayString = this.getFormattedText(trainstate$trainstatetype, (byte)j1);
-               } else {
-                  this.buttonAnnouncement.displayString = this.getFormattedText(trainstate$trainstatetype, (byte)j1);
-               }
+         if (button.id != 112 && button.id != 113) {
+            if (button.id != 114 && button.id != 115) {
+               button.displayString = this.getFormattedText(trainstate$trainstatetype, (byte)j1);
             } else {
-               this.buttonDestination.displayString = this.getFormattedText(trainstate$trainstatetype, (byte)j1);
+               this.buttonAnnouncement.displayString = this.getFormattedText(trainstate$trainstatetype, (byte)j1);
             }
          } else {
-            this.buttonChunkLoader.displayString = this.getFormattedText(trainstate$trainstatetype, (byte)j1);
+            this.buttonDestination.displayString = this.getFormattedText(trainstate$trainstatetype, (byte)j1);
          }
       }
 
       if (button.id == 300 || button.id == 301) {
          ((GuiButtonDoor)button).opened ^= true;
@@ -608,14 +619,11 @@
    private void onCustomButtonClick(int index, int val) {
       this.vehicle.getResourceState().getDataMap().setInt("Button" + index, val, 3);
    }
 
    protected String getFormattedText(TrainState.TrainStateType stateType, byte par2) {
-      if (stateType == TrainState.TrainStateType.ChunkLoader) {
-         String s3 = "state." + stateType.stateName;
-         return I18n.format(s3, new Object[0]) + par2;
-      } else if (stateType == TrainState.TrainStateType.Destination) {
+      if (stateType == TrainState.TrainStateType.Destination) {
          if (par2 >= this.modelset.getConfig().rollsignNames.length) {
             par2 = (byte)(this.modelset.getConfig().rollsignNames.length - 1);
          }
 
          String s2 = "state." + stateType.stateName;
