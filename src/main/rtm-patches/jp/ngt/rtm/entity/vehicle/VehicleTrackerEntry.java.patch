--- a/jp/ngt/rtm/entity/vehicle/VehicleTrackerEntry.java
+++ b/jp/ngt/rtm/entity/vehicle/VehicleTrackerEntry.java
@@ -71,15 +71,14 @@
       if (!list.equals(this.passengers)) {
          this.passengers = list;
          this.sendPacketToTrackedPlayers(new SPacketSetPassengers(this.trackedEntity));
       }
 
-      if (this.updateCounter % this.updateFrequency == 0 && this.trackedEntity.getRidingEntity() == null) {
-         RTMCore.NETWORK_WRAPPER.sendToAll(new PacketVehicleMovement(this.trackedEntity, false));
-         if (this.isTrain) {
-         }
-      }
+      if (this.updateCounter % this.updateFrequency == 0 && this.trackedEntity.getRidingEntity() == null)
+         RTMCore.NETWORK_WRAPPER.sendToAllTracking(
+            new PacketVehicleMovement(this.trackedEntity, false), trackedEntity
+         );
 
       this.sendMetadataToAllAssociatedPlayers();
       ++this.updateCounter;
    }
 
@@ -128,11 +127,11 @@
                par1.connection.sendPacket(packet);
                if (!this.trackedEntity.getDataManager().isEmpty()) {
                   par1.connection.sendPacket(new SPacketEntityMetadata(this.trackedEntity.getEntityId(), this.trackedEntity.getDataManager(), true));
                }
 
-               PacketNBT.sendToClient(this.trackedEntity);
+               PacketNBT.sendToClient(this.trackedEntity, par1);
                if (this.trackedEntity.getRidingEntity() != null) {
                   par1.connection.sendPacket(new SPacketEntityAttach(this.trackedEntity, this.trackedEntity.getRidingEntity()));
                }
 
                ForgeEventFactory.onStartEntityTracking(this.trackedEntity, par1);
@@ -160,41 +159,11 @@
       }
 
    }
 
    public static boolean trackingVehicle(Entity par1) {
-      if (!(par1 instanceof EntityVehicleBase) && !(par1 instanceof EntityBogie)) {
-         throw new IllegalArgumentException("This entity is not Vehicle");
-      } else {
-         if (par1.world instanceof WorldServer) {
-            EntityTracker entitytracker = ((WorldServer)par1.world).getEntityTracker();
-            Set<EntityTrackerEntry> set = getTrackedEntities(entitytracker);
-            if (set != null) {
-               VehicleTrackerEntry vehicletrackerentry = new VehicleTrackerEntry(par1);
-               EntityTrackerEntry entitytrackerentry = null;
-
-               for(EntityTrackerEntry entitytrackerentry1 : set) {
-                  if (entitytrackerentry1 != null && entitytrackerentry1.equals(vehicletrackerentry)) {
-                     if (!(entitytrackerentry1 instanceof VehicleTrackerEntry)) {
-                        entitytrackerentry = entitytrackerentry1;
-                     }
-                     break;
-                  }
-               }
-
-               if (entitytrackerentry != null) {
-                  set.remove(entitytrackerentry);
-                  vehicletrackerentry.setPlayers(entitytrackerentry.trackingPlayers);
-                  set.add(vehicletrackerentry);
-                  return true;
-               }
-            }
-         }
-
-         NGTLog.debug("Failed to change tracking entry (VTE)");
-         return false;
-      }
+      return true; // not used.
    }
 
    protected static Set<EntityTrackerEntry> getTrackedEntities(EntityTracker tracker) {
       return (Set)NGTUtil.getField(EntityTracker.class, tracker, new String[]{"entries", "field_72793_b"});
    }
