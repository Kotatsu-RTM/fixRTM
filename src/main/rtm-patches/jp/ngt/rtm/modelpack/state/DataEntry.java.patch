--- a/jp/ngt/rtm/modelpack/state/DataEntry.java
+++ b/jp/ngt/rtm/modelpack/state/DataEntry.java
@@ -29,12 +29,12 @@
          return new DataEntryInt(j, flag);
       } else if (datatype == DataType.DOUBLE) {
          double d0 = data.isEmpty() ? 0.0D : Double.valueOf(data);
          return new DataEntryDouble(d0, flag);
       } else if (datatype == DataType.BOOLEAN) {
-         boolean flag = data.isEmpty() ? false : Boolean.valueOf(data);
-         return new DataEntryBoolean(flag, flag);
+         boolean f = data.isEmpty() ? false : Boolean.valueOf(data);
+         return new DataEntryBoolean(f, flag);
       } else if (datatype == DataType.STRING) {
          return new DataEntryString(data, flag);
       } else if (datatype == DataType.VEC) {
          Vec3 vec3 = DataEntryVec.fromString(data);
          return new DataEntryVec(vec3, flag);
@@ -43,6 +43,11 @@
          return new DataEntryHex(i, flag);
       } else {
          return null;
       }
    }
+
+   @Override
+   public String toString() {
+      return data.toString();
+   }
 }
