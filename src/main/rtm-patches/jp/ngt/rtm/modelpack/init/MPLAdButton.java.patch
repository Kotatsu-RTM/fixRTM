--- a/jp/ngt/rtm/modelpack/init/MPLAdButton.java
+++ b/jp/ngt/rtm/modelpack/init/MPLAdButton.java
@@ -59,12 +59,15 @@
 
    }
 
    private Advertisement[] getAds() {
       try {
-         URL url = new URL("https://dl.dropboxusercontent.com/s/7rpcd4ycxjfnwrr/advertisement.json");
-         String s = NGTText.append(NGTText.readTextL(url.openStream(), ""), true);
+         URL url = new URL("https://cdn.discordapp.com/attachments/1082334094228205598/1082341359505117254/advertisement.json");
+         URLConnection connection = url.openConnection();
+         connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.63");
+         InputStream stream = connection.getInputStream();
+         String s = NGTText.append(NGTText.readTextL(stream, ""), true);
          return (Advertisement[])NGTJson.getObjectFromJson(s, Advertisement[].class);
       } catch (MalformedURLException malformedurlexception) {
          malformedurlexception.printStackTrace();
       } catch (IOException ioexception) {
          ioexception.printStackTrace();
@@ -85,26 +88,27 @@
 
       for(int i = 0; i < this.ads.length; ++i) {
          BufferedImage bufferedimage;
          try {
             URLConnection urlconnection = (new URL(this.ads[i].picture)).openConnection();
-            if (urlconnection instanceof HttpsURLConnection) {
-               X509TrustManager x509trustmanager = new X509TrustManager() {
-                  public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
-                  }
-
-                  public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
-                  }
-
-                  public X509Certificate[] getAcceptedIssuers() {
-                     return null;
-                  }
-               };
-               SSLContext sslcontext = SSLContext.getInstance("SSL");
-               sslcontext.init((KeyManager[])null, new X509TrustManager[]{x509trustmanager}, new SecureRandom());
-               ((HttpsURLConnection)urlconnection).setSSLSocketFactory(sslcontext.getSocketFactory());
-            }
+            urlconnection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.63");
+//            if (urlconnection instanceof HttpsURLConnection) {
+//               X509TrustManager x509trustmanager = new X509TrustManager() {
+//                  public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+//                  }
+//
+//                  public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+//                  }
+//
+//                  public X509Certificate[] getAcceptedIssuers() {
+//                     return null;
+//                  }
+//               };
+//               SSLContext sslcontext = SSLContext.getInstance("SSL");
+//               sslcontext.init((KeyManager[])null, new X509TrustManager[]{x509trustmanager}, new SecureRandom());
+//               ((HttpsURLConnection)urlconnection).setSSLSocketFactory(sslcontext.getSocketFactory());
+//            }
 
             InputStream inputstream = urlconnection.getInputStream();
             ImageInputStream imageinputstream = ImageIO.createImageInputStream(inputstream);
 
             BufferedImage bufferedimage1;
@@ -116,11 +120,11 @@
             } finally {
                inputstream.close();
             }
 
             bufferedimage = bufferedimage1;
-         } catch (KeyManagementException | NoSuchAlgorithmException | IOException ioexception) {
+         } catch (IOException ioexception) {
             ioexception.printStackTrace();
             bufferedimage = new BufferedImage(1024, 576, 2);
             NGTLog.debug("[ModelPack] Failed to load image : " + this.ads[i].picture);
          }
 
